<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>o_actor</parentName>
  <maskName>d_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tipo = irandom(sprite_get_number(d_item) - 1);
mundo = instance_nearest(room_width * 0.25, room_height / 2, o_mundo);
grita = 1 + random(m_grita_s);
direction = random(360);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// interaccion player
if !mundo.esnuevo {
    var lej = point_distance(x, y, o_player.x, o_player.y);
    var foc, dif;
    // seguir
    if espacio {
        foc = point_direction(x, y, o_player.x, o_player.y);
        dif = angle_difference(direction, foc);
        lej = (2 / (1 + exp(-lej * 0.01))) - 1;
        direction -= dif * (0.4 / sqr(lej)) * dlt;
    }
    // huir
    else {
        foc = point_direction(o_player.x, o_player.y, x, y);
        dif = angle_difference(direction, foc);
        lej = (2 / (1 + exp(-lej * 0.02))) - 1;
        direction -= dif * (0.3 / sqr(lej)) * dlt;
    }
}
// sonar
else if !enjuego {
    grita -= dlt;
    if grita &lt;= 0 {
        grita = random(m_grita_s);
        if random(1) &lt; 1.5 / instance_number(o_item) {
            grita += 1;
            audio_play_sound(s_audio_item(tipo), 0, false);
            var m = instance_nearest(room_width * 0.25, room_height / 2, o_mundo);
            s_new_letrero(m.x, m.y, s_txt_item(tipo), frac(tipo / 2) == 0);
        }
    }
}

// colision
var otr = instance_place(x, y, o_item);
if otr != noone {
    var rev = point_direction(otr.x, otr.y, x, y);
    var dif = angle_difference(direction, rev);
    direction -= dif / 2;
    dif = angle_difference(otr.direction, -rev);
    otr.direction -= dif / 2;
}

// limites
if point_distance(x, y, mundo.x, mundo.y) &gt; 255 {
    var rev = point_direction(mundo.x, mundo.y, x, y);
    x = mundo.x + lengthdir_x(250, rev);
    y = mundo.y + lengthdir_y(250, rev);
    rev = point_direction(x, y, mundo.x, mundo.y);
    var dif = angle_difference(-rev, direction);
    direction = rev - dif;
}

// movimiento
var v = m_veloci_item * dlt;
x += lengthdir_x(v, direction);
y += lengthdir_y(v, direction);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(d_item, tipo, x, y, 0.25, 0.25, 0, c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
