<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
draw_set_font(f_letras);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
s_http_descargas();
s_http_enviapuntos("", 0, 0);
audio_channel_num(120);

// variables importantes de ejecucion
globalvar enjuego, reloj, dlt, espacio, puntos, total, intro, spanish;
intro = true;
enjuego = false;
reloj = 0;
dlt = 0;
espacio = false;
puntos = 0;
total = 0;
spanish = os_get_language() == "es";

// para contar introduccion
momento_time = 0;
linea_time = -m_esperaini_s;
piano = m_piano_s;

// puntos persistentes locales
ini_open("config.ini");
nombre = ini_read_string("config", "nombre", "");
loc_nombre = ini_read_string("config", "loc_nombre", "");
loc_puntos = ini_read_real("config", "loc_puntos", 0);
loc_total = ini_read_real("config", "loc_total", 0);
glo_nombre = ini_read_string("config", "glo_nombre", "");
glo_puntos = ini_read_real("config", "glo_puntos", 0);
glo_total = ini_read_real("config", "glo_total", 0);
ini_close();
nombre = string_copy(nombre, 1, min(m_name_len, string_length(nombre)));

// crear el escenario
with instance_create(room_width * 0.25, room_height / 2, o_mundo) {
    instance_create(x, y, o_player);
}
with instance_create(room_width * 0.75, room_height / 2, o_mundo) {
    esnuevo = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// delta y estado

dlt = min(0.1, delta_time * 0.000001);

espacio = keyboard_check(vk_space);
reloj = max(0, reloj - dlt);
if enjuego {
    if reloj == 0 {
        s_game_end();
    }
    else {
        if !audio_is_playing(a_reloj_suave) and !audio_is_playing(a_reloj_full) {
            if reloj &gt; m_juego_s * 0.33 {
                audio_play_sound(a_reloj_suave, 100, false);
            }
            else {
                audio_play_sound(a_reloj_full, 100, false);
            }
        }
    }
}
else {
    if reloj == 0 and espacio {
        s_game_start();
    }
    else if intro {
        linea_time += dlt;
        if linea_time &gt;= 1.5 {
            linea_time = 0;
            momento_time++;
            var t = "";
            if spanish {
                switch momento_time {
                    case 1: t = "Existir nos sumerge"; break;
                    case 2: t = "en un mar de dualidades"; break;
                    case 3: t = "en un azar constante"; break;
                    case 4: t = "que dicta nuestro destino"; break;
                    case 5: t = "y nos lleva a las estrellas"; break;
                    case 6: t = "o al foso más profundo."; break;
                    case 7: t = "..."; break;
                    case 8: t = "Pero en medio del caos"; break;
                    case 9: t = "una leve fuerza consciente"; break;
                    case 10: t = "puede transmutarnos"; break;
                    case 11: t = "guiándonos intuitivamente"; break;
                    case 12: t = "para construir un nuevo mundo"; break;
                    case 13: t = "tal como lo hemos soñado."; break;
                    case 14: t = "..."; break;
                    case 15: t = "Recolecta los ítems positivos"; break;
                    case 16: t = "y de ese modo sonará tu mundo."; break;
                }
            }
            else {
                switch momento_time {
                    case 1: t = "Existing inmerse us"; break;
                    case 2: t = "in a sea of dualities"; break;
                    case 3: t = "in a constant chance"; break;
                    case 4: t = "that dictates our destiny"; break;
                    case 5: t = "and takes us to the stars"; break;
                    case 6: t = "or to the deepest pit."; break;
                    case 7: t = "..."; break;
                    case 8: t = "But in the middle of the chaos"; break;
                    case 9: t = "a slight conscious force"; break;
                    case 10: t = "can transmute us"; break;
                    case 11: t = "guiding us intuitively"; break;
                    case 12: t = "to build a new world"; break;
                    case 13: t = "just as we have dreamed."; break;
                    case 14: t = "..."; break;
                    case 15: t = "Collect the positive items"; break;
                    case 16: t = "and that way your world will sound."; break;
                }
            }
            var c = false;
            switch momento_time {
                case 7: case 8: case 9: case 10: case 11: case 12: case 13:
                    c = true; break;
            }
            var m = instance_nearest(room_width * 0.75, room_height / 2, o_mundo);
            s_new_letrero(m.x, m.y, t, c);
            // repetir
            if momento_time == 16 {
                momento_time = 0;
                linea_time = -m_esperaini_s;
            }
        }
        // piano
        piano -= dlt;
        if piano &lt;= 0 {
            piano = m_piano_s;
            var a = noone;
            switch irandom(8) {
                case 0: a = a_tono1; break;
                case 1: a = a_tono2; break;
                case 2: a = a_tono3; break;
                case 3: a = a_tono4; break;
                case 4: a = a_tono5; break;
                case 5: a = a_tono6; break;
                case 6: a = a_tono7; break;
            }
            if a != noone {
                audio_play_sound(a, 10, false);
            }
        }
    }
}

// salir
if keyboard_check_pressed(vk_escape) {
    if enjuego {
        s_game_end();
        reloj = 1;
    }
    else {
        game_end();
    }
}

// ir a mi web
if keyboard_check_pressed(vk_enter) {
    if choose(true, false) {
        url_open("https://gamejolt.com/@PersonajeX/games");
    }
    else {
        url_open("https://www.deviantart.com/omarsaurus");
    }
}

// borrar nombre
if keyboard_check_pressed(vk_backspace) {
    if nombre != "" {
        var len = string_length(nombre);
        if len == 1 {
            nombre = "";
        }
        else {
            nombre = string_copy(nombre, 1, len - 1);
        }
    }
}

// escribir nombre
if keyboard_check_pressed(vk_anykey) and string_length(nombre) &lt; m_name_len {
    var c = keyboard_lastchar;
    if string_count(c, m_char_mask) == 1 {
        nombre += c;
        keyboard_lastchar = "";
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_find_value(async_load, "status") == 0 {
    var txt = ds_map_find_value(async_load, "result");
    if txt != "error" and string_count("|", txt) == 2 and
            string_length(txt) &lt; m_name_len + 10 and txt != "||" {
        txt = s_split(txt, "|", false);
        if txt[0] != "" {
            glo_nombre = txt[0];
            glo_puntos = real(txt[1]);
            glo_total = real(txt[2]);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("config.ini");
ini_write_string("config", "nombre", nombre);
ini_write_string("config", "loc_nombre", loc_nombre);
ini_write_real("config", "loc_puntos", loc_puntos);
ini_write_real("config", "loc_total", loc_total);
ini_write_string("config", "glo_nombre", glo_nombre);
ini_write_real("config", "glo_puntos", glo_puntos);
ini_write_real("config", "glo_total", glo_total);
ini_close();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUI
draw_sprite(d_titulo, 0, room_width / 2, 0);
draw_sprite(d_omwekiatl, 0, room_width, room_height);

// comando
if enjuego or reloj == 0 {
    if espacio {
        draw_sprite_ext(d_comando, 0, 0, room_height,
            1.25, 1.25, 0, c_white, 1);
    }
    else {
        draw_sprite(d_comando, 0, 0, room_height);
    }
}

// texto global
var e = 0.75;
var xt = room_width - 75 * e;
var yt = 50 * e;
draw_sprite_ext(d_texto, 0, xt, yt, e, e, 0, c_white, 1);
draw_text_transformed_colour(xt, yt - 15 * e, glo_nombre,
    e, e, 0, c_black, c_black, c_black, c_black, 1);
draw_text_transformed_colour(xt, yt + 15 * e,
    string(glo_puntos) + " / " + string(glo_total),
    e, e, 0, c_black, c_black, c_black, c_black, 1);
draw_sprite_ext(d_texto, 2, xt, yt, e, e, 0, c_white, 1);

// texto local
var e = 0.75;
var xt = 75 * e;
var yt = 50 * e;
draw_sprite_ext(d_texto, 0, xt, yt, e, e, 0, c_white, 1);
draw_text_transformed_colour(xt, yt - 15 * e, loc_nombre,
    e, e, 0, c_black, c_black, c_black, c_black, 1);
draw_text_transformed_colour(xt, yt + 15 * e,
    string(loc_puntos) + " / " + string(loc_total),
    e, e, 0, c_black, c_black, c_black, c_black, 1);
draw_sprite_ext(d_texto, 1, xt, yt, e, e, 0, c_white, 1);

// texto actual
var xt = room_width / 2;
var yt = room_height - 50;
draw_sprite(d_texto, 0, xt, yt);
var n = nombre;
if n == "" {
    n = "***name***";
}
draw_text_transformed_colour(xt, yt - 15, n,
    1, 1, 0, c_black, c_black, c_black, c_black, 1);
draw_text_transformed_colour(xt, yt + 15,
    string(puntos) + " / " + string(total),
    1, 1, 0, c_black, c_black, c_black, c_black, 1);

// reloj
draw_sprite(d_reloj, 1, room_width / 2, room_height - 90);
if enjuego {
    draw_sprite_ext(d_reloj, 2, room_width / 2, room_height - 90,
        1, reloj / m_juego_s, 0, c_white, 1);
}
draw_sprite(d_reloj, 0, room_width / 2, room_height - 90);

// instrucciones
if intro {
    var t;
    if spanish {
        t = "Instrucciónes:##1. Digite su nombre#2. Espacio para iniciar#3. " +
            "Usted es la cara feliz#4. Espacio para atraer#5. Colecte items positivos";
    }
    else {
        t = "Instructions:##1. Type your name#2. Space to start#3. " +
            "You are the happy face#4. Space to attract#5. Collect positive items";
    }
    draw_text_transformed_colour(room_width * 0.25, room_height / 2, t, 1.5, 1.5, 0,
        c_black, c_black, c_black, c_black, 0.8);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
